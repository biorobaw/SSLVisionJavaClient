// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_robocup_ssl_geometry_legacy.proto

package ssl.RoboCup2014Legacy.Geometry;

public final class MessagesRobocupSslGeometryLegacy {
  private MessagesRobocupSslGeometryLegacy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SSL_GeometryFieldSizeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 line_width = 1;</code>
     */
    boolean hasLineWidth();
    /**
     * <code>required int32 line_width = 1;</code>
     */
    int getLineWidth();

    /**
     * <code>required int32 field_length = 2;</code>
     */
    boolean hasFieldLength();
    /**
     * <code>required int32 field_length = 2;</code>
     */
    int getFieldLength();

    /**
     * <code>required int32 field_width = 3;</code>
     */
    boolean hasFieldWidth();
    /**
     * <code>required int32 field_width = 3;</code>
     */
    int getFieldWidth();

    /**
     * <code>required int32 boundary_width = 4;</code>
     */
    boolean hasBoundaryWidth();
    /**
     * <code>required int32 boundary_width = 4;</code>
     */
    int getBoundaryWidth();

    /**
     * <code>required int32 referee_width = 5;</code>
     */
    boolean hasRefereeWidth();
    /**
     * <code>required int32 referee_width = 5;</code>
     */
    int getRefereeWidth();

    /**
     * <code>required int32 goal_width = 6;</code>
     */
    boolean hasGoalWidth();
    /**
     * <code>required int32 goal_width = 6;</code>
     */
    int getGoalWidth();

    /**
     * <code>required int32 goal_depth = 7;</code>
     */
    boolean hasGoalDepth();
    /**
     * <code>required int32 goal_depth = 7;</code>
     */
    int getGoalDepth();

    /**
     * <code>required int32 goal_wall_width = 8;</code>
     */
    boolean hasGoalWallWidth();
    /**
     * <code>required int32 goal_wall_width = 8;</code>
     */
    int getGoalWallWidth();

    /**
     * <code>required int32 center_circle_radius = 9;</code>
     */
    boolean hasCenterCircleRadius();
    /**
     * <code>required int32 center_circle_radius = 9;</code>
     */
    int getCenterCircleRadius();

    /**
     * <code>required int32 defense_radius = 10;</code>
     */
    boolean hasDefenseRadius();
    /**
     * <code>required int32 defense_radius = 10;</code>
     */
    int getDefenseRadius();

    /**
     * <code>required int32 defense_stretch = 11;</code>
     */
    boolean hasDefenseStretch();
    /**
     * <code>required int32 defense_stretch = 11;</code>
     */
    int getDefenseStretch();

    /**
     * <code>required int32 free_kick_from_defense_dist = 12;</code>
     */
    boolean hasFreeKickFromDefenseDist();
    /**
     * <code>required int32 free_kick_from_defense_dist = 12;</code>
     */
    int getFreeKickFromDefenseDist();

    /**
     * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
     */
    boolean hasPenaltySpotFromFieldLineDist();
    /**
     * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
     */
    int getPenaltySpotFromFieldLineDist();

    /**
     * <code>required int32 penalty_line_from_spot_dist = 14;</code>
     */
    boolean hasPenaltyLineFromSpotDist();
    /**
     * <code>required int32 penalty_line_from_spot_dist = 14;</code>
     */
    int getPenaltyLineFromSpotDist();
  }
  /**
   * Protobuf type {@code ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize}
   */
  public  static final class SSL_GeometryFieldSize extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize)
      SSL_GeometryFieldSizeOrBuilder {
    // Use SSL_GeometryFieldSize.newBuilder() to construct.
    private SSL_GeometryFieldSize(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryFieldSize() {
      lineWidth_ = 0;
      fieldLength_ = 0;
      fieldWidth_ = 0;
      boundaryWidth_ = 0;
      refereeWidth_ = 0;
      goalWidth_ = 0;
      goalDepth_ = 0;
      goalWallWidth_ = 0;
      centerCircleRadius_ = 0;
      defenseRadius_ = 0;
      defenseStretch_ = 0;
      freeKickFromDefenseDist_ = 0;
      penaltySpotFromFieldLineDist_ = 0;
      penaltyLineFromSpotDist_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryFieldSize(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lineWidth_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fieldLength_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fieldWidth_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              boundaryWidth_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              refereeWidth_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              goalWidth_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              goalDepth_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              goalWallWidth_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              centerCircleRadius_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              defenseRadius_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              defenseStretch_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              freeKickFromDefenseDist_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              penaltySpotFromFieldLineDist_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              penaltyLineFromSpotDist_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.class, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder.class);
    }

    private int bitField0_;
    public static final int LINE_WIDTH_FIELD_NUMBER = 1;
    private int lineWidth_;
    /**
     * <code>required int32 line_width = 1;</code>
     */
    public boolean hasLineWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 line_width = 1;</code>
     */
    public int getLineWidth() {
      return lineWidth_;
    }

    public static final int FIELD_LENGTH_FIELD_NUMBER = 2;
    private int fieldLength_;
    /**
     * <code>required int32 field_length = 2;</code>
     */
    public boolean hasFieldLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 field_length = 2;</code>
     */
    public int getFieldLength() {
      return fieldLength_;
    }

    public static final int FIELD_WIDTH_FIELD_NUMBER = 3;
    private int fieldWidth_;
    /**
     * <code>required int32 field_width = 3;</code>
     */
    public boolean hasFieldWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 field_width = 3;</code>
     */
    public int getFieldWidth() {
      return fieldWidth_;
    }

    public static final int BOUNDARY_WIDTH_FIELD_NUMBER = 4;
    private int boundaryWidth_;
    /**
     * <code>required int32 boundary_width = 4;</code>
     */
    public boolean hasBoundaryWidth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 boundary_width = 4;</code>
     */
    public int getBoundaryWidth() {
      return boundaryWidth_;
    }

    public static final int REFEREE_WIDTH_FIELD_NUMBER = 5;
    private int refereeWidth_;
    /**
     * <code>required int32 referee_width = 5;</code>
     */
    public boolean hasRefereeWidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 referee_width = 5;</code>
     */
    public int getRefereeWidth() {
      return refereeWidth_;
    }

    public static final int GOAL_WIDTH_FIELD_NUMBER = 6;
    private int goalWidth_;
    /**
     * <code>required int32 goal_width = 6;</code>
     */
    public boolean hasGoalWidth() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 goal_width = 6;</code>
     */
    public int getGoalWidth() {
      return goalWidth_;
    }

    public static final int GOAL_DEPTH_FIELD_NUMBER = 7;
    private int goalDepth_;
    /**
     * <code>required int32 goal_depth = 7;</code>
     */
    public boolean hasGoalDepth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 goal_depth = 7;</code>
     */
    public int getGoalDepth() {
      return goalDepth_;
    }

    public static final int GOAL_WALL_WIDTH_FIELD_NUMBER = 8;
    private int goalWallWidth_;
    /**
     * <code>required int32 goal_wall_width = 8;</code>
     */
    public boolean hasGoalWallWidth() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 goal_wall_width = 8;</code>
     */
    public int getGoalWallWidth() {
      return goalWallWidth_;
    }

    public static final int CENTER_CIRCLE_RADIUS_FIELD_NUMBER = 9;
    private int centerCircleRadius_;
    /**
     * <code>required int32 center_circle_radius = 9;</code>
     */
    public boolean hasCenterCircleRadius() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 center_circle_radius = 9;</code>
     */
    public int getCenterCircleRadius() {
      return centerCircleRadius_;
    }

    public static final int DEFENSE_RADIUS_FIELD_NUMBER = 10;
    private int defenseRadius_;
    /**
     * <code>required int32 defense_radius = 10;</code>
     */
    public boolean hasDefenseRadius() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 defense_radius = 10;</code>
     */
    public int getDefenseRadius() {
      return defenseRadius_;
    }

    public static final int DEFENSE_STRETCH_FIELD_NUMBER = 11;
    private int defenseStretch_;
    /**
     * <code>required int32 defense_stretch = 11;</code>
     */
    public boolean hasDefenseStretch() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 defense_stretch = 11;</code>
     */
    public int getDefenseStretch() {
      return defenseStretch_;
    }

    public static final int FREE_KICK_FROM_DEFENSE_DIST_FIELD_NUMBER = 12;
    private int freeKickFromDefenseDist_;
    /**
     * <code>required int32 free_kick_from_defense_dist = 12;</code>
     */
    public boolean hasFreeKickFromDefenseDist() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 free_kick_from_defense_dist = 12;</code>
     */
    public int getFreeKickFromDefenseDist() {
      return freeKickFromDefenseDist_;
    }

    public static final int PENALTY_SPOT_FROM_FIELD_LINE_DIST_FIELD_NUMBER = 13;
    private int penaltySpotFromFieldLineDist_;
    /**
     * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
     */
    public boolean hasPenaltySpotFromFieldLineDist() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
     */
    public int getPenaltySpotFromFieldLineDist() {
      return penaltySpotFromFieldLineDist_;
    }

    public static final int PENALTY_LINE_FROM_SPOT_DIST_FIELD_NUMBER = 14;
    private int penaltyLineFromSpotDist_;
    /**
     * <code>required int32 penalty_line_from_spot_dist = 14;</code>
     */
    public boolean hasPenaltyLineFromSpotDist() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 penalty_line_from_spot_dist = 14;</code>
     */
    public int getPenaltyLineFromSpotDist() {
      return penaltyLineFromSpotDist_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLineWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFieldLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFieldWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoundaryWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRefereeWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoalWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoalDepth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGoalWallWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCenterCircleRadius()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefenseRadius()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDefenseStretch()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFreeKickFromDefenseDist()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPenaltySpotFromFieldLineDist()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPenaltyLineFromSpotDist()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, lineWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fieldLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fieldWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, boundaryWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, refereeWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, goalWidth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, goalDepth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, goalWallWidth_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, centerCircleRadius_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, defenseRadius_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, defenseStretch_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, freeKickFromDefenseDist_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, penaltySpotFromFieldLineDist_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, penaltyLineFromSpotDist_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lineWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fieldLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fieldWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, boundaryWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, refereeWidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, goalWidth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, goalDepth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, goalWallWidth_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, centerCircleRadius_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, defenseRadius_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, defenseStretch_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, freeKickFromDefenseDist_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, penaltySpotFromFieldLineDist_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, penaltyLineFromSpotDist_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize)) {
        return super.equals(obj);
      }
      ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize other = (ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize) obj;

      boolean result = true;
      result = result && (hasLineWidth() == other.hasLineWidth());
      if (hasLineWidth()) {
        result = result && (getLineWidth()
            == other.getLineWidth());
      }
      result = result && (hasFieldLength() == other.hasFieldLength());
      if (hasFieldLength()) {
        result = result && (getFieldLength()
            == other.getFieldLength());
      }
      result = result && (hasFieldWidth() == other.hasFieldWidth());
      if (hasFieldWidth()) {
        result = result && (getFieldWidth()
            == other.getFieldWidth());
      }
      result = result && (hasBoundaryWidth() == other.hasBoundaryWidth());
      if (hasBoundaryWidth()) {
        result = result && (getBoundaryWidth()
            == other.getBoundaryWidth());
      }
      result = result && (hasRefereeWidth() == other.hasRefereeWidth());
      if (hasRefereeWidth()) {
        result = result && (getRefereeWidth()
            == other.getRefereeWidth());
      }
      result = result && (hasGoalWidth() == other.hasGoalWidth());
      if (hasGoalWidth()) {
        result = result && (getGoalWidth()
            == other.getGoalWidth());
      }
      result = result && (hasGoalDepth() == other.hasGoalDepth());
      if (hasGoalDepth()) {
        result = result && (getGoalDepth()
            == other.getGoalDepth());
      }
      result = result && (hasGoalWallWidth() == other.hasGoalWallWidth());
      if (hasGoalWallWidth()) {
        result = result && (getGoalWallWidth()
            == other.getGoalWallWidth());
      }
      result = result && (hasCenterCircleRadius() == other.hasCenterCircleRadius());
      if (hasCenterCircleRadius()) {
        result = result && (getCenterCircleRadius()
            == other.getCenterCircleRadius());
      }
      result = result && (hasDefenseRadius() == other.hasDefenseRadius());
      if (hasDefenseRadius()) {
        result = result && (getDefenseRadius()
            == other.getDefenseRadius());
      }
      result = result && (hasDefenseStretch() == other.hasDefenseStretch());
      if (hasDefenseStretch()) {
        result = result && (getDefenseStretch()
            == other.getDefenseStretch());
      }
      result = result && (hasFreeKickFromDefenseDist() == other.hasFreeKickFromDefenseDist());
      if (hasFreeKickFromDefenseDist()) {
        result = result && (getFreeKickFromDefenseDist()
            == other.getFreeKickFromDefenseDist());
      }
      result = result && (hasPenaltySpotFromFieldLineDist() == other.hasPenaltySpotFromFieldLineDist());
      if (hasPenaltySpotFromFieldLineDist()) {
        result = result && (getPenaltySpotFromFieldLineDist()
            == other.getPenaltySpotFromFieldLineDist());
      }
      result = result && (hasPenaltyLineFromSpotDist() == other.hasPenaltyLineFromSpotDist());
      if (hasPenaltyLineFromSpotDist()) {
        result = result && (getPenaltyLineFromSpotDist()
            == other.getPenaltyLineFromSpotDist());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLineWidth()) {
        hash = (37 * hash) + LINE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getLineWidth();
      }
      if (hasFieldLength()) {
        hash = (37 * hash) + FIELD_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getFieldLength();
      }
      if (hasFieldWidth()) {
        hash = (37 * hash) + FIELD_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getFieldWidth();
      }
      if (hasBoundaryWidth()) {
        hash = (37 * hash) + BOUNDARY_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getBoundaryWidth();
      }
      if (hasRefereeWidth()) {
        hash = (37 * hash) + REFEREE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getRefereeWidth();
      }
      if (hasGoalWidth()) {
        hash = (37 * hash) + GOAL_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getGoalWidth();
      }
      if (hasGoalDepth()) {
        hash = (37 * hash) + GOAL_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getGoalDepth();
      }
      if (hasGoalWallWidth()) {
        hash = (37 * hash) + GOAL_WALL_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getGoalWallWidth();
      }
      if (hasCenterCircleRadius()) {
        hash = (37 * hash) + CENTER_CIRCLE_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getCenterCircleRadius();
      }
      if (hasDefenseRadius()) {
        hash = (37 * hash) + DEFENSE_RADIUS_FIELD_NUMBER;
        hash = (53 * hash) + getDefenseRadius();
      }
      if (hasDefenseStretch()) {
        hash = (37 * hash) + DEFENSE_STRETCH_FIELD_NUMBER;
        hash = (53 * hash) + getDefenseStretch();
      }
      if (hasFreeKickFromDefenseDist()) {
        hash = (37 * hash) + FREE_KICK_FROM_DEFENSE_DIST_FIELD_NUMBER;
        hash = (53 * hash) + getFreeKickFromDefenseDist();
      }
      if (hasPenaltySpotFromFieldLineDist()) {
        hash = (37 * hash) + PENALTY_SPOT_FROM_FIELD_LINE_DIST_FIELD_NUMBER;
        hash = (53 * hash) + getPenaltySpotFromFieldLineDist();
      }
      if (hasPenaltyLineFromSpotDist()) {
        hash = (37 * hash) + PENALTY_LINE_FROM_SPOT_DIST_FIELD_NUMBER;
        hash = (53 * hash) + getPenaltyLineFromSpotDist();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize)
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.class, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder.class);
      }

      // Construct using ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        lineWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fieldWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        boundaryWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        refereeWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        goalWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        goalDepth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        goalWallWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        centerCircleRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        defenseRadius_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        defenseStretch_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        freeKickFromDefenseDist_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        penaltySpotFromFieldLineDist_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        penaltyLineFromSpotDist_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor;
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getDefaultInstanceForType() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance();
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize build() {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize buildPartial() {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize result = new ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lineWidth_ = lineWidth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fieldLength_ = fieldLength_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fieldWidth_ = fieldWidth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.boundaryWidth_ = boundaryWidth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.refereeWidth_ = refereeWidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.goalWidth_ = goalWidth_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.goalDepth_ = goalDepth_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.goalWallWidth_ = goalWallWidth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.centerCircleRadius_ = centerCircleRadius_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.defenseRadius_ = defenseRadius_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.defenseStretch_ = defenseStretch_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.freeKickFromDefenseDist_ = freeKickFromDefenseDist_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.penaltySpotFromFieldLineDist_ = penaltySpotFromFieldLineDist_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.penaltyLineFromSpotDist_ = penaltyLineFromSpotDist_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize) {
          return mergeFrom((ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize other) {
        if (other == ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance()) return this;
        if (other.hasLineWidth()) {
          setLineWidth(other.getLineWidth());
        }
        if (other.hasFieldLength()) {
          setFieldLength(other.getFieldLength());
        }
        if (other.hasFieldWidth()) {
          setFieldWidth(other.getFieldWidth());
        }
        if (other.hasBoundaryWidth()) {
          setBoundaryWidth(other.getBoundaryWidth());
        }
        if (other.hasRefereeWidth()) {
          setRefereeWidth(other.getRefereeWidth());
        }
        if (other.hasGoalWidth()) {
          setGoalWidth(other.getGoalWidth());
        }
        if (other.hasGoalDepth()) {
          setGoalDepth(other.getGoalDepth());
        }
        if (other.hasGoalWallWidth()) {
          setGoalWallWidth(other.getGoalWallWidth());
        }
        if (other.hasCenterCircleRadius()) {
          setCenterCircleRadius(other.getCenterCircleRadius());
        }
        if (other.hasDefenseRadius()) {
          setDefenseRadius(other.getDefenseRadius());
        }
        if (other.hasDefenseStretch()) {
          setDefenseStretch(other.getDefenseStretch());
        }
        if (other.hasFreeKickFromDefenseDist()) {
          setFreeKickFromDefenseDist(other.getFreeKickFromDefenseDist());
        }
        if (other.hasPenaltySpotFromFieldLineDist()) {
          setPenaltySpotFromFieldLineDist(other.getPenaltySpotFromFieldLineDist());
        }
        if (other.hasPenaltyLineFromSpotDist()) {
          setPenaltyLineFromSpotDist(other.getPenaltyLineFromSpotDist());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLineWidth()) {
          return false;
        }
        if (!hasFieldLength()) {
          return false;
        }
        if (!hasFieldWidth()) {
          return false;
        }
        if (!hasBoundaryWidth()) {
          return false;
        }
        if (!hasRefereeWidth()) {
          return false;
        }
        if (!hasGoalWidth()) {
          return false;
        }
        if (!hasGoalDepth()) {
          return false;
        }
        if (!hasGoalWallWidth()) {
          return false;
        }
        if (!hasCenterCircleRadius()) {
          return false;
        }
        if (!hasDefenseRadius()) {
          return false;
        }
        if (!hasDefenseStretch()) {
          return false;
        }
        if (!hasFreeKickFromDefenseDist()) {
          return false;
        }
        if (!hasPenaltySpotFromFieldLineDist()) {
          return false;
        }
        if (!hasPenaltyLineFromSpotDist()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int lineWidth_ ;
      /**
       * <code>required int32 line_width = 1;</code>
       */
      public boolean hasLineWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 line_width = 1;</code>
       */
      public int getLineWidth() {
        return lineWidth_;
      }
      /**
       * <code>required int32 line_width = 1;</code>
       */
      public Builder setLineWidth(int value) {
        bitField0_ |= 0x00000001;
        lineWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 line_width = 1;</code>
       */
      public Builder clearLineWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lineWidth_ = 0;
        onChanged();
        return this;
      }

      private int fieldLength_ ;
      /**
       * <code>required int32 field_length = 2;</code>
       */
      public boolean hasFieldLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 field_length = 2;</code>
       */
      public int getFieldLength() {
        return fieldLength_;
      }
      /**
       * <code>required int32 field_length = 2;</code>
       */
      public Builder setFieldLength(int value) {
        bitField0_ |= 0x00000002;
        fieldLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 field_length = 2;</code>
       */
      public Builder clearFieldLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fieldLength_ = 0;
        onChanged();
        return this;
      }

      private int fieldWidth_ ;
      /**
       * <code>required int32 field_width = 3;</code>
       */
      public boolean hasFieldWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 field_width = 3;</code>
       */
      public int getFieldWidth() {
        return fieldWidth_;
      }
      /**
       * <code>required int32 field_width = 3;</code>
       */
      public Builder setFieldWidth(int value) {
        bitField0_ |= 0x00000004;
        fieldWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 field_width = 3;</code>
       */
      public Builder clearFieldWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fieldWidth_ = 0;
        onChanged();
        return this;
      }

      private int boundaryWidth_ ;
      /**
       * <code>required int32 boundary_width = 4;</code>
       */
      public boolean hasBoundaryWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 boundary_width = 4;</code>
       */
      public int getBoundaryWidth() {
        return boundaryWidth_;
      }
      /**
       * <code>required int32 boundary_width = 4;</code>
       */
      public Builder setBoundaryWidth(int value) {
        bitField0_ |= 0x00000008;
        boundaryWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 boundary_width = 4;</code>
       */
      public Builder clearBoundaryWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        boundaryWidth_ = 0;
        onChanged();
        return this;
      }

      private int refereeWidth_ ;
      /**
       * <code>required int32 referee_width = 5;</code>
       */
      public boolean hasRefereeWidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 referee_width = 5;</code>
       */
      public int getRefereeWidth() {
        return refereeWidth_;
      }
      /**
       * <code>required int32 referee_width = 5;</code>
       */
      public Builder setRefereeWidth(int value) {
        bitField0_ |= 0x00000010;
        refereeWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 referee_width = 5;</code>
       */
      public Builder clearRefereeWidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        refereeWidth_ = 0;
        onChanged();
        return this;
      }

      private int goalWidth_ ;
      /**
       * <code>required int32 goal_width = 6;</code>
       */
      public boolean hasGoalWidth() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 goal_width = 6;</code>
       */
      public int getGoalWidth() {
        return goalWidth_;
      }
      /**
       * <code>required int32 goal_width = 6;</code>
       */
      public Builder setGoalWidth(int value) {
        bitField0_ |= 0x00000020;
        goalWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 goal_width = 6;</code>
       */
      public Builder clearGoalWidth() {
        bitField0_ = (bitField0_ & ~0x00000020);
        goalWidth_ = 0;
        onChanged();
        return this;
      }

      private int goalDepth_ ;
      /**
       * <code>required int32 goal_depth = 7;</code>
       */
      public boolean hasGoalDepth() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 goal_depth = 7;</code>
       */
      public int getGoalDepth() {
        return goalDepth_;
      }
      /**
       * <code>required int32 goal_depth = 7;</code>
       */
      public Builder setGoalDepth(int value) {
        bitField0_ |= 0x00000040;
        goalDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 goal_depth = 7;</code>
       */
      public Builder clearGoalDepth() {
        bitField0_ = (bitField0_ & ~0x00000040);
        goalDepth_ = 0;
        onChanged();
        return this;
      }

      private int goalWallWidth_ ;
      /**
       * <code>required int32 goal_wall_width = 8;</code>
       */
      public boolean hasGoalWallWidth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 goal_wall_width = 8;</code>
       */
      public int getGoalWallWidth() {
        return goalWallWidth_;
      }
      /**
       * <code>required int32 goal_wall_width = 8;</code>
       */
      public Builder setGoalWallWidth(int value) {
        bitField0_ |= 0x00000080;
        goalWallWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 goal_wall_width = 8;</code>
       */
      public Builder clearGoalWallWidth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        goalWallWidth_ = 0;
        onChanged();
        return this;
      }

      private int centerCircleRadius_ ;
      /**
       * <code>required int32 center_circle_radius = 9;</code>
       */
      public boolean hasCenterCircleRadius() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 center_circle_radius = 9;</code>
       */
      public int getCenterCircleRadius() {
        return centerCircleRadius_;
      }
      /**
       * <code>required int32 center_circle_radius = 9;</code>
       */
      public Builder setCenterCircleRadius(int value) {
        bitField0_ |= 0x00000100;
        centerCircleRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 center_circle_radius = 9;</code>
       */
      public Builder clearCenterCircleRadius() {
        bitField0_ = (bitField0_ & ~0x00000100);
        centerCircleRadius_ = 0;
        onChanged();
        return this;
      }

      private int defenseRadius_ ;
      /**
       * <code>required int32 defense_radius = 10;</code>
       */
      public boolean hasDefenseRadius() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 defense_radius = 10;</code>
       */
      public int getDefenseRadius() {
        return defenseRadius_;
      }
      /**
       * <code>required int32 defense_radius = 10;</code>
       */
      public Builder setDefenseRadius(int value) {
        bitField0_ |= 0x00000200;
        defenseRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 defense_radius = 10;</code>
       */
      public Builder clearDefenseRadius() {
        bitField0_ = (bitField0_ & ~0x00000200);
        defenseRadius_ = 0;
        onChanged();
        return this;
      }

      private int defenseStretch_ ;
      /**
       * <code>required int32 defense_stretch = 11;</code>
       */
      public boolean hasDefenseStretch() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 defense_stretch = 11;</code>
       */
      public int getDefenseStretch() {
        return defenseStretch_;
      }
      /**
       * <code>required int32 defense_stretch = 11;</code>
       */
      public Builder setDefenseStretch(int value) {
        bitField0_ |= 0x00000400;
        defenseStretch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 defense_stretch = 11;</code>
       */
      public Builder clearDefenseStretch() {
        bitField0_ = (bitField0_ & ~0x00000400);
        defenseStretch_ = 0;
        onChanged();
        return this;
      }

      private int freeKickFromDefenseDist_ ;
      /**
       * <code>required int32 free_kick_from_defense_dist = 12;</code>
       */
      public boolean hasFreeKickFromDefenseDist() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 free_kick_from_defense_dist = 12;</code>
       */
      public int getFreeKickFromDefenseDist() {
        return freeKickFromDefenseDist_;
      }
      /**
       * <code>required int32 free_kick_from_defense_dist = 12;</code>
       */
      public Builder setFreeKickFromDefenseDist(int value) {
        bitField0_ |= 0x00000800;
        freeKickFromDefenseDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 free_kick_from_defense_dist = 12;</code>
       */
      public Builder clearFreeKickFromDefenseDist() {
        bitField0_ = (bitField0_ & ~0x00000800);
        freeKickFromDefenseDist_ = 0;
        onChanged();
        return this;
      }

      private int penaltySpotFromFieldLineDist_ ;
      /**
       * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
       */
      public boolean hasPenaltySpotFromFieldLineDist() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
       */
      public int getPenaltySpotFromFieldLineDist() {
        return penaltySpotFromFieldLineDist_;
      }
      /**
       * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
       */
      public Builder setPenaltySpotFromFieldLineDist(int value) {
        bitField0_ |= 0x00001000;
        penaltySpotFromFieldLineDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 penalty_spot_from_field_line_dist = 13;</code>
       */
      public Builder clearPenaltySpotFromFieldLineDist() {
        bitField0_ = (bitField0_ & ~0x00001000);
        penaltySpotFromFieldLineDist_ = 0;
        onChanged();
        return this;
      }

      private int penaltyLineFromSpotDist_ ;
      /**
       * <code>required int32 penalty_line_from_spot_dist = 14;</code>
       */
      public boolean hasPenaltyLineFromSpotDist() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 penalty_line_from_spot_dist = 14;</code>
       */
      public int getPenaltyLineFromSpotDist() {
        return penaltyLineFromSpotDist_;
      }
      /**
       * <code>required int32 penalty_line_from_spot_dist = 14;</code>
       */
      public Builder setPenaltyLineFromSpotDist(int value) {
        bitField0_ |= 0x00002000;
        penaltyLineFromSpotDist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 penalty_line_from_spot_dist = 14;</code>
       */
      public Builder clearPenaltyLineFromSpotDist() {
        bitField0_ = (bitField0_ & ~0x00002000);
        penaltyLineFromSpotDist_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize)
    }

    // @@protoc_insertion_point(class_scope:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize)
    private static final ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize();
    }

    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryFieldSize>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryFieldSize>() {
      public SSL_GeometryFieldSize parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SSL_GeometryFieldSize(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryFieldSize> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryFieldSize> getParserForType() {
      return PARSER;
    }

    public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSL_GeometryDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    boolean hasField();
    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getField();
    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder();

    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> 
        getCalibList();
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index);
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    int getCalibCount();
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    java.util.List<? extends ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
        getCalibOrBuilderList();
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData}
   */
  public  static final class SSL_GeometryData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData)
      SSL_GeometryDataOrBuilder {
    // Use SSL_GeometryData.newBuilder() to construct.
    private SSL_GeometryData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSL_GeometryData() {
      calib_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSL_GeometryData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                calib_ = new java.util.ArrayList<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration>();
                mutable_bitField0_ |= 0x00000002;
              }
              calib_.add(
                  input.readMessage(ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          calib_ = java.util.Collections.unmodifiableList(calib_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.class, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELD_FIELD_NUMBER = 1;
    private ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize field_;
    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getField() {
      return field_ == null ? ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance() : field_;
    }
    /**
     * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
     */
    public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder() {
      return field_ == null ? ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance() : field_;
    }

    public static final int CALIB_FIELD_NUMBER = 2;
    private java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> calib_;
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> getCalibList() {
      return calib_;
    }
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public java.util.List<? extends ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
        getCalibOrBuilderList() {
      return calib_;
    }
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public int getCalibCount() {
      return calib_.size();
    }
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
      return calib_.get(index);
    }
    /**
     * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
     */
    public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
        int index) {
      return calib_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasField()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getField().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCalibCount(); i++) {
        if (!getCalib(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getField());
      }
      for (int i = 0; i < calib_.size(); i++) {
        output.writeMessage(2, calib_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getField());
      }
      for (int i = 0; i < calib_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, calib_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData)) {
        return super.equals(obj);
      }
      ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData other = (ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData) obj;

      boolean result = true;
      result = result && (hasField() == other.hasField());
      if (hasField()) {
        result = result && getField()
            .equals(other.getField());
      }
      result = result && getCalibList()
          .equals(other.getCalibList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasField()) {
        hash = (37 * hash) + FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getField().hashCode();
      }
      if (getCalibCount() > 0) {
        hash = (37 * hash) + CALIB_FIELD_NUMBER;
        hash = (53 * hash) + getCalibList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData)
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.class, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.Builder.class);
      }

      // Construct using ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
          getCalibFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = null;
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (calibBuilder_ == null) {
          calib_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          calibBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor;
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData getDefaultInstanceForType() {
        return ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.getDefaultInstance();
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData build() {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData buildPartial() {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData result = new ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        if (calibBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            calib_ = java.util.Collections.unmodifiableList(calib_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.calib_ = calib_;
        } else {
          result.calib_ = calibBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData) {
          return mergeFrom((ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData other) {
        if (other == ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (calibBuilder_ == null) {
          if (!other.calib_.isEmpty()) {
            if (calib_.isEmpty()) {
              calib_ = other.calib_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCalibIsMutable();
              calib_.addAll(other.calib_);
            }
            onChanged();
          }
        } else {
          if (!other.calib_.isEmpty()) {
            if (calibBuilder_.isEmpty()) {
              calibBuilder_.dispose();
              calibBuilder_ = null;
              calib_ = other.calib_;
              bitField0_ = (bitField0_ & ~0x00000002);
              calibBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalibFieldBuilder() : null;
            } else {
              calibBuilder_.addAllMessages(other.calib_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasField()) {
          return false;
        }
        if (!getField().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getCalibCount(); i++) {
          if (!getCalib(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize field_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder> fieldBuilder_;
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public boolean hasField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize getField() {
        if (fieldBuilder_ == null) {
          return field_ == null ? ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance() : field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder setField(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder setField(
          ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder mergeField(ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize value) {
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              field_ != null &&
              field_ != ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance()) {
            field_ =
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = null;
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder getFieldBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_ == null ?
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.getDefaultInstance() : field_;
        }
      }
      /**
       * <code>required .ssl.RoboCup2014Legacy.Geometry.SSL_GeometryFieldSize field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSize.Builder, ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryFieldSizeOrBuilder>(
                  getField(),
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      private java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> calib_ =
        java.util.Collections.emptyList();
      private void ensureCalibIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          calib_ = new java.util.ArrayList<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration>(calib_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> calibBuilder_;

      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> getCalibList() {
        if (calibBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calib_);
        } else {
          return calibBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public int getCalibCount() {
        if (calibBuilder_ == null) {
          return calib_.size();
        } else {
          return calibBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration getCalib(int index) {
        if (calibBuilder_ == null) {
          return calib_.get(index);
        } else {
          return calibBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder setCalib(
          int index, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.set(index, value);
          onChanged();
        } else {
          calibBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder setCalib(
          int index, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.set(index, builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.add(value);
          onChanged();
        } else {
          calibBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          int index, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration value) {
        if (calibBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibIsMutable();
          calib_.add(index, value);
          onChanged();
        } else {
          calibBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.add(builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addCalib(
          int index, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder builderForValue) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.add(index, builderForValue.build());
          onChanged();
        } else {
          calibBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder addAllCalib(
          java.lang.Iterable<? extends ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration> values) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calib_);
          onChanged();
        } else {
          calibBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder clearCalib() {
        if (calibBuilder_ == null) {
          calib_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          calibBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public Builder removeCalib(int index) {
        if (calibBuilder_ == null) {
          ensureCalibIsMutable();
          calib_.remove(index);
          onChanged();
        } else {
          calibBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder getCalibBuilder(
          int index) {
        return getCalibFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder getCalibOrBuilder(
          int index) {
        if (calibBuilder_ == null) {
          return calib_.get(index);  } else {
          return calibBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<? extends ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
           getCalibOrBuilderList() {
        if (calibBuilder_ != null) {
          return calibBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calib_);
        }
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder addCalibBuilder() {
        return getCalibFieldBuilder().addBuilder(
            ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance());
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder addCalibBuilder(
          int index) {
        return getCalibFieldBuilder().addBuilder(
            index, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.getDefaultInstance());
      }
      /**
       * <code>repeated .ssl.SSL_GeometryCameraCalibration calib = 2;</code>
       */
      public java.util.List<ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder> 
           getCalibBuilderList() {
        return getCalibFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder> 
          getCalibFieldBuilder() {
        if (calibBuilder_ == null) {
          calibBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibration.Builder, ssl.MessagesRobocupSslGeometry.SSL_GeometryCameraCalibrationOrBuilder>(
                  calib_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          calib_ = null;
        }
        return calibBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData)
    }

    // @@protoc_insertion_point(class_scope:ssl.RoboCup2014Legacy.Geometry.SSL_GeometryData)
    private static final ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData();
    }

    public static ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSL_GeometryData>
        PARSER = new com.google.protobuf.AbstractParser<SSL_GeometryData>() {
      public SSL_GeometryData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SSL_GeometryData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSL_GeometryData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSL_GeometryData> getParserForType() {
      return PARSER;
    }

    public ssl.RoboCup2014Legacy.Geometry.MessagesRobocupSslGeometryLegacy.SSL_GeometryData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*messages_robocup_ssl_geometry_legacy.p" +
      "roto\022\036ssl.RoboCup2014Legacy.Geometry\032#me" +
      "ssages_robocup_ssl_geometry.proto\"\212\003\n\025SS" +
      "L_GeometryFieldSize\022\022\n\nline_width\030\001 \002(\005\022" +
      "\024\n\014field_length\030\002 \002(\005\022\023\n\013field_width\030\003 \002" +
      "(\005\022\026\n\016boundary_width\030\004 \002(\005\022\025\n\rreferee_wi" +
      "dth\030\005 \002(\005\022\022\n\ngoal_width\030\006 \002(\005\022\022\n\ngoal_de" +
      "pth\030\007 \002(\005\022\027\n\017goal_wall_width\030\010 \002(\005\022\034\n\024ce" +
      "nter_circle_radius\030\t \002(\005\022\026\n\016defense_radi" +
      "us\030\n \002(\005\022\027\n\017defense_stretch\030\013 \002(\005\022#\n\033fre",
      "e_kick_from_defense_dist\030\014 \002(\005\022)\n!penalt" +
      "y_spot_from_field_line_dist\030\r \002(\005\022#\n\033pen" +
      "alty_line_from_spot_dist\030\016 \002(\005\"\213\001\n\020SSL_G" +
      "eometryData\022D\n\005field\030\001 \002(\01325.ssl.RoboCup" +
      "2014Legacy.Geometry.SSL_GeometryFieldSiz" +
      "e\0221\n\005calib\030\002 \003(\0132\".ssl.SSL_GeometryCamer" +
      "aCalibration"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ssl.MessagesRobocupSslGeometry.getDescriptor(),
        }, assigner);
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryFieldSize_descriptor,
        new java.lang.String[] { "LineWidth", "FieldLength", "FieldWidth", "BoundaryWidth", "RefereeWidth", "GoalWidth", "GoalDepth", "GoalWallWidth", "CenterCircleRadius", "DefenseRadius", "DefenseStretch", "FreeKickFromDefenseDist", "PenaltySpotFromFieldLineDist", "PenaltyLineFromSpotDist", });
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ssl_RoboCup2014Legacy_Geometry_SSL_GeometryData_descriptor,
        new java.lang.String[] { "Field", "Calib", });
    ssl.MessagesRobocupSslGeometry.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
